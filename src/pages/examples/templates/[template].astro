---
import { TEMPLATES } from "../../../data"

import ExampleIframe from "../../../components/layout/example-preview/ExamplePreview.astro"
import ExampleReferences from "../../../components/layout/examples/ExampleReferences.astro"
import ExampleTOC from "../../../components/layout/examples/ExampleTOC.astro"
import ExampleLayout from "../../../layouts/examples/ExampleLayout.astro"

export function getStaticPaths() {
	const paths = TEMPLATES.map(({ label }) => {
		return { params: { template: label } }
	})
	return paths
}

const { template: slug } = Astro.params

const [filteredTemplate] = TEMPLATES.filter((template) => {
	if (template.label === slug) {
		return template
	}
})

const {
	component: PageTemplateExample,
	name: PageTemplateName,
	label: PageTemplateLabel,
	files: PageTemplateFiles,
	variants,
	references,
} = filteredTemplate

const pageTitle = `TLT - ${PageTemplateName}`
---

<ExampleLayout slug={slug} title={pageTitle}>
	<div class="flex w-full flex-col items-center justify-start gap-16">
		<section
			id={`default-${PageTemplateLabel}`}
			class="flex w-full flex-col items-start justify-center gap-8"
		>
			<h2 slot="example-name" class="w-full text-4xl font-medium">
				{PageTemplateName}
			</h2>
			<div class="flex size-full flex-col items-center justify-center rounded-md bg-slate-800">
				{
					PageTemplateExample && (
						<ExampleIframe files={PageTemplateFiles} slug={`/templates/${PageTemplateLabel}`} />
					)
				}
			</div>
		</section>
		{
			variants &&
				variants.map(
					({ label, name, component: VariantComponent, files: VariantTemplateFiles }) => {
						return (
							<section id={label} class="flex w-full flex-col items-center justify-center gap-4">
								<h2 class="w-full text-4xl font-medium">{name}</h2>
								<div class="flex w-full flex-col items-center justify-center rounded-md bg-slate-800">
									{VariantComponent && (
										<ExampleIframe files={VariantTemplateFiles} slug={`/templates/${label}`} />
									)}
								</div>
							</section>
						)
					}
				)
		}
		<ExampleReferences references={references} />
	</div>
	<ExampleTOC
		slot="toc"
		exampleLabel={PageTemplateLabel}
		exampleName={PageTemplateName}
		variants={variants}
		references={references}
	/>
</ExampleLayout>
<style>
	ol {
		list-style: decimal;
		padding-left: 1.5rem;
	}
	li {
		display: list-item;
	}
	a {
		@apply decoration-white decoration-2 underline-offset-8 hover:underline;
	}
</style>
