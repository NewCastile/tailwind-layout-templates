---
import type { TemplateItem } from "../../data"

interface Props {
	template: TemplateItem
}
const {
	template: { name, href, icon: TemplateIcon },
} = Astro.props
---

<astro-template-card
	data-href={href}
	class="template-card border-secondary bg-foreground flex h-full w-max cursor-pointer flex-col items-center justify-between gap-4 rounded-lg border-2 px-6 py-4"
>
	<h3 class="text-center text-yellow-200">
		{name}
	</h3>
	<div class="w-full">
		{TemplateIcon && <TemplateIcon />}
	</div>
	<span class="text-white">Go to page</span>
</astro-template-card>
<style>
	.template-card {
		@apply shadow-lg shadow-black ring-0 transition-["ring"] duration-200 ease-in-out;
	}
	.template-card:hover {
		@apply border-white ring-2 ring-white;
	}
</style>
<script>
	class TemplateCard extends HTMLElement {
		constructor() {
			super()

			const href = this.getAttribute("data-href")

			const changeLocation = (event: MouseEvent | KeyboardEvent, href: string) => {
				event.preventDefault()
				event.stopPropagation()

				if (event instanceof KeyboardEvent && event.key !== "Enter") {
					return
				}

				window.location.href = href
			}

			if (href) {
				this.addEventListener("click", (e) => changeLocation(e, href))
				this.addEventListener("keydown", (e) => changeLocation(e, href))
			}
		}
	}

	customElements.define("astro-template-card", TemplateCard)
</script>
