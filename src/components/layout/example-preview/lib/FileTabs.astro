---
import { LOGOS, type TemplateItem } from "../../../../data"
import CodeWrapper from "../lib/CodeWrapper.astro"
import ClipboardButton from "./ClipboardButton.astro"

interface Props {
	files: TemplateItem["files"]
}

const { files } = Astro.props
const fileNames = files ? files.map(({ rawFileName }) => rawFileName) : []
---

<astro-tabs
	class="flex h-max w-full flex-col items-start justify-start rounded-md border-2 border-slate-500 hover:border-white"
>
	<div class="w-full">
		<div class="tabs-container w-full overflow-x-auto rounded-t-sm bg-stone-800">
			<div role="tablist" class="flex w-max flex-row items-center justify-start">
				{
					fileNames.map((fileName, fileNameIdx) => {
						const isFirstElement = !fileNameIdx
						const tabIdx = fileNameIdx + 1
						const fileExtension = LOGOS.find((logo) => {
							const dotSplittedFilename = fileName.split(".")
							const extension = dotSplittedFilename[dotSplittedFilename.length - 1]
							return logo.fileExtension === extension
						})

						return (
							<button
								id={`tab-${tabIdx}`}
								type="button"
								role="tab"
								aria-selected={isFirstElement ? "true" : "false"}
								aria-controls={`tabpanel-${tabIdx}`}
								class={
									"w-max rounded-t-sm border-r border-r-slate-400 px-4 py-2 text-xs text-stone-400 focus:text-white"
								}
							>
								<span class="inline-flex w-max flex-row items-center justify-start gap-2 align-middle">
									{fileExtension && <fileExtension.icon width="14" height="14" />}
									{fileName}
								</span>
							</button>
						)
					})
				}
			</div>
		</div>
	</div>
	<div class="relative flex h-[500px] w-full flex-col items-center justify-start overflow-y-hidden">
		{
			files &&
				files.map(({ rawFile, rawFileName, lang }, fileIdx) => {
					const isFirstElement = !fileIdx
					const panelIdx = fileIdx + 1
					return (
						<div
							id={`tabpanel-${panelIdx}`}
							class:list={[{ hidden: !isFirstElement }, "h-full", "w-full"]}
							role="tabpanel"
							aria-labelledby={`tab-${panelIdx}`}
						>
							<CodeWrapper lang={lang} raw={rawFile} />
							<ClipboardButton rawFileName={rawFileName} />
						</div>
					)
				})
		}
	</div>
</astro-tabs>
<style>
	[role="tab"][aria-selected="true"] {
		@apply border-t-2 border-blue-500 bg-[rgb(30_30_30)] text-white outline outline-4 outline-blue-500;
	}
</style>
<script src="../scripts/astro-tabs.ts"></script>
